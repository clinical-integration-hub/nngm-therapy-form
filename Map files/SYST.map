/*
To Do:
- how to make extensions of extensions
- how to access beurteilung
- accessing effective[x]
- creating references to ECOG, 
- valueset of medicatinadministrationstatuscode valueset?
*/

/// version = 0.1
/// title = "nNGM: Mapping TherapieformSYST"
/// status = draft

map "http://uk-koeln.de/fhir/StructureMap/nNGM_Mapping_TherapieSYST" = nNGM_Mapping_TherapieSYST

uses "http://hl7.org/fhir/StructureDefinition/CTS_Transport" as source
uses "http://hl7.org/fhir/StructureDefinition/MedicationAdministration" as target

group TransformBundle(source src: CTS_Transport, target bundle: Bundle) {
  src -> bundle.id = uuid();
  src -> bundle.type = 'collection';

  src -> bundle.entry as entry,
    entry.resource = create('MedicationAdministration') as medicationadministration
  then TransformMedicationAdministrationSystemischeTherapie(src, medicationadministration);
}

group TransformMedicationAdministrationSystemischeTherapie(source src: CTS_Transport, target tgt: MedicationAdministration) {
  src -> tgt.id = uuid();
  src -> tgt.meta as meta collate, meta.profile = 'http://uk-koeln.de/fhir/StructureDefinition/Procedure/nNGM/MedicationAdministration';

  src.operations as operations, operations.data as data then {

    data.values as values where "blockindex = 0 and groupindex = 0 and itemid = 'id_1600'"
    then {
      values.value as fallID -> tgt.context = create('Reference') as ref,
        ref.identifier = id('http://uk-koeln.de/fhir/NamingSystem/nNGM/fallnummer', fallID);
    };

    //Therapieinformation --> should come from beurteilung
    data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2336'"
    then {
      values.value as Therapieinformation -> tgt.supportingInformation = create('Reference') as supinfo,
        supinfo.display = Therapieinformation;
    };


    //TherapieinformationHilfreich make extension of extension to hilfreich 
    data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2337'"
    then {
      //hilfreich
      values.value as Therapieinformation -> tgt.supportingInformation = create('Reference') as supinfo collate,
        supinfo.extension as therapieInformationen,
        therapieInformationen.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/therapieinformationen',
        therapieInformationen.value = Therapieinformation;
    };

    //TherapieinformationUmgesetzt make extension of extension to umgesetzt
    data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2338'"
    then {
      //umgesetzt
      values.value as Therapieinformation -> tgt.supportingInformation = create('Reference') as supinfo collate,
        supinfo.extension as therapieInformationen,
        therapieInformationen.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/therapieinformationen',
        therapieInformationen.value = Therapieinformation;
    };

    //TherapieinformationUmgesetzt make extension of extension to nichtumsetzunggrund
    data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2339'"
    then {
      //umgesetzt
      values.value as Therapieinformation -> tgt.supportingInformation = create('Reference') as supinfo collate,
        supinfo.extension as therapieInformationen,
        therapieInformationen.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/therapieinformationen',
        therapieInformationen.value = Therapieinformation;
    };

    /*
    //Therapiebeginn how to access effective[x]
    data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1246'" then
    {
        values.value as beginn -> tgt.effectivePeriod as effective,
        effective.start = dateOp(beginn); 
    };
    
    
    //ECOGPerformanceStatus  create ECOG reference and translate value to ecog
    data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2415'" then
    {
      values.value as ECOG -> create('Reference') as ecog,
      ecog.canonical = 'http://uk-koeln.de/fhir/StructureDefinition/Observation/cancer-base/ecog',
      ecog.code = ECOG;
    };
    
    
    //TherapieEnde
    data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1247'" then
    {
      values.value as ende -> create('BackboneElement') as effectivePeriod,
      effectivePeriod.start = datetime(ende); 
    };
    
    */

    //DurchfuehrendeEinrichtung 
    data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1242'"
    then {
      values.value as durchfuehrendeEinrichtung -> tgt.performer = create('BackboneElement') as performer,
        performer.actor as actor,
        actor.display = durchfuehrendeEinrichtung;
    };

    /*
			   //TherapeutischeIntention  and itemid = 'id_2324'.exists().not(), access value[x].coding
               data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1243'" then
               {
                values.value as value-> tgt.extension as intention,
                intention.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/cancer-base/intention-therapie',
                intention.coding = c('http://uk-koeln.de/fhir/ValueSet/cancer-base/adt/intention-therapie', value);
               };       
                
			   
			   //TherapeutischeIntention and itemid = 'id_2324'.exists().not()
               data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1243' " then
               {
                values.value as value-> tgt.extension as intention,
                intention.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/cancer-base/intention-therapie',
                intention.valueCodableConcept = cc('http://uk-koeln.de/fhir/ValueSet/cancer-base/adt/intention-therapie', value);
               
               
               
               };        
               
               //OffLabel  and itemid = 'id_5'.exists().not()
               data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_2341'" then
               {
                values.value as value -> tgt.extension as offlabel,
                offlabel.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/nNGM/off-label-therapie',
                offlabel.valueCodableConcept = value;
               };
               
               //TherapieKlinischenStudie
               data.values as values where "blockindex = 1 and groupindex = 0 and itemid = 'id_2337'" then
               {
                values.value as value -> tgt.extension as studientherapie,
                studie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/cancer-base/studientherapie',
                studie.valueCodableConcept = value;
               }; 
               
               //Studienname
               data.values as values where "blockindex = 2 and groupindex = 0 and itemid = 'id_1244'" then
               {
                values.value as value -> tgt.extension as studie collate,
                studie.url = 'http://uk-koeln.de/fhir/StructureDefinition/Extension/cancer-base/studientherapie',
                studie.valueReference = values;                  
               };  
               
               //TherapieSchema   -> vs missing?
               data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_1241'" then
               {
                   values.value as therapieschema -> tgt.medication[x] as medication,
                   medication.medicationCodableConcept = cc('missingvalueset', therapieschema);
               }; 
               
               //AnzahlZyklen  cast string to fhir string to simplequanity
               data.values as values where "blockindex = 3 and groupindex = 0 and itemid = 'id_1250'" then
               {
                   values.value as nzyklen -> tgt.dosate = create('BackboneElement') as dosage,
                   dosage.rate[x] as rate,
                   rate.rateQuantity = evaluate(string, '$this.toQuantity()');
               };  
               
                              //BestesAnsprechen    observation valueCodableConcept coding code
               data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_1354'" then
               {
                 values.value as bestesAnsprechen -> create('Reference') as observation,
                 Observation.reasonCode = cc('http://hl7.org/fhir/ValueSet/medication-admin-status', bestesAnsprechen);
               };   
               
               //BeurteilungNach system of ^?  observation valueCodableConcept coding code
               data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_1355'" then
               {
                  values.value as beurteilungnach -> create('Reference') as observation
               };
               
               //DatumProgress     condition onsetdatetime
               data.values as values where "blockindex = 5 and groupindex = 0 and itemid = 'id_1545'" then
               {
                 values.value as datumprogress -> create('Reference') as Condition,
                 Condition.onsetDateTime = datetime(datumprogress); 
               };   
               

               //ArtDesTherapieEndes     MedicationAdministrationStatusCode valueset canonical?
               data.values as values where "blockindex = 6 and groupindex = 0 and itemid = 'id_1356'" then
               {
                 values.value as adte -> tgt.status = cc('MedicationAdministrationStatusCode', adt);
               };                            

                
               //Nebenwirkungen    for some reason not recognised?
               data.values as values where "blockindex = 6 and groupindex = 0 and itemid = 'id_2343'" then
               {
                 values.value as nebenwirkungen -> tgt.statusReason = cc('http://uk-koeln.de/fhir/ValueSet/cancer-base/therapie-statusreason', nebenwirkungen);
               };   
               
               */

    //Sontstiges --> string;     
    data.values as values where "blockindex = 7 and groupindex = 0 and itemid = 'id_1205'"
    then {
      values.value as sonstiges -> tgt.note = create('BackboneElement') as note,
        note.text = sonstiges;
    };
  };
}